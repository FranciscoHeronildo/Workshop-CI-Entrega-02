stages:
  - build
  - test
  - deploy

backend-build:
  image: node:latest
  stage: build
  before_script:
    - cd backend
  script:
    - npm install
    - npm run build

frontend-build:
  image: node:latest
  stage: build
  script:
    - yarn

image: docker:latest
services:
  - docker:dind

variables:
  CI_REGISTRY_USER: $CI_REGISTRY_USER
  CI_REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD

backend-test:
  image: docker/compose:latest
  stage: test
  before_script:
    - cd backend
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker-compose run --entrypoint "npm run unittest" backend

frontend-test:
  image: docker/compose:latest
  stage: test
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker-compose run --entrypoint "npm run test" frontend

backend-deploy:
  image: docker:latest
  stage: deploy
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build -t $CI_REGISTRY_USER/backend-image .
    - docker push $CI_REGISTRY_USER/backend-image

frontend-deploy:
  image: docker:latest
  stage: deploy
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build -t $CI_REGISTRY_USER/frontend-image .
    - docker push $CI_REGISTRY_USER/frontend-image
